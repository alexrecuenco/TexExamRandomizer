% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/jsonparser.R
\name{jsonexamparser}
\alias{jsonexamparser}
\title{Json Exam Document Parser}
\usage{
jsonexamparser(opt)
}
\arguments{
\item{opt}{Options as parsed from \code{\link[optparse]{parse_args}}. See the example code to see the expected format of the options handed to this program.}
}
\description{
This function takes a series of options as obtained from \code{\link[optparse]{parse_args}} with the format given below as an example.
And from that information it finds a --file option. Searches for \code{\%!TexExamRandomizer} tags in the first 200 lines of the preamble of that file and applies \code{\link{CreateRandomExams}}. To that file with the options found from the command and the tags.

Note that the tags must respect the JSON format, that is. It \emph{needs} to be written within double quotes.
}
\details{
All the options can be found on

\code{vignette("ExamOptions", package = "TexExamRandomizer")}

The options that are called "command line" options in the vignette are those that are given to the function through opt, the rest of the options are read directly frmo the document specified with \code{--file <filename>}
}
\examples{
\dontrun{
option_list <- list(
    make_option(
        c("--file"),
        action = "store",
        default = NULL,
        type = 'character',
        help = "Filename of the Tex File"
    ),
    make_option(
        c("--table"),
        action = "store",
        default = NULL,
        type = 'character',
        help = "Filename of the table to break down. It overwrites the values written on the file"
    ),
    make_option(
        c("-n", "--noutput"),
        action = "store",
        default = NULL,
        type = "integer",
        help = "Number of output Versions"
    ),
    make_option(
        c("-q", "--nquestions"),
        action = "store",
        default = NULL,
        type = "character",
        help = "Number of output questions"
    ),
    make_option(
        c("-s", "--seed"),
        action = "store",
        default = NULL,
        type = "integer",
        help = "Seed for any randomization done"
    ),
    make_option(
        c("-c", "--compile"),
        action = "store_true",
        default = FALSE,
        type = "logical",
        help = "Should the output folder be compiled or not"
    ),
    make_option(
        c("--xelatex"),
        action = "store_true",
        default = FALSE,
        type = "logical",
        help = "Should we use xelatex to compile or not"
    ),
    make_option(
        c("-d", "--debug"),
        action = "store_true",
        default = FALSE,
        type = "logical",
        help = "If debugging, it doesn't remove auxiliary files"
    )
)


#### PARSING OPTIONS ####
####
opt <-
    parse_args(
        OptionParser(option_list = option_list),
        positional_arguments = TRUE
    )



jsonexamparser(opt)
}

}
\seealso{
Other jsoncompiler: \code{\link{ParsePreambleForOptions}},
  \code{\link{jsonhwparser}}
}
